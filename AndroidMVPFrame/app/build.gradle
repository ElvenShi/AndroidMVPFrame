apply plugin: 'com.android.application'

def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

def getPropInt(def key) {
    return Integer.valueOf((String) getProperty(key));
}

android {
    compileSdkVersion getPropInt("TARGET_SDK_VERSION")
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "com.yaozu.mvp"
        minSdkVersion getPropInt("MIN_SDK_VERSION")
        targetSdkVersion getPropInt("TARGET_SDK_VERSION")
        versionCode getPropInt("VERSION_CODE")
        versionName getProperty("VERSION_NAME")

        ndk {
            //选择要添加的对应cpu类型的.so库。如果有对应的so文件则依次添加
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64', 'mips', 'mips64'
        }

        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }

    signingConfigs {
        release {
            storeFile file("keystore.jks")
            storePassword "签名文件储存密码"
            keyAlias "别名"
            keyPassword "签名文件密码"
        }
        debug {
//            storeFile file("debug.keystore")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//设置签名信息
            applicationVariants.all {
                variant ->
                    variant.outputs.each { output ->
                        if (output.outputFile != null && output.outputFile.name.endsWith('.apk')
                                && 'release'.equals(variant.buildType.name)) {
                            def apkFile = new File(
                                    output.outputFile.getParent(),
                                    "android_${getProperty("RELEASE_APP_NAME")}_${variant.versionName}_${buildTime()}.apk")
                            output.outputFile = apkFile
                        }
                    }
            }
        }

        debug {

        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile project(':baselibrary')
    //使用okhttp和httpURLConnection加载网页内容和图片
    compile 'com.squareup.okhttp3:okhttp-urlconnection:3.9.0'
}
