apply plugin: 'com.android.application'

def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

def getPropInt(def key) {
    return Integer.valueOf((String) getProperty(key));
}

def getPropString(def key) {
    return (String) getProperty(key);
}

android {
    compileSdkVersion getPropInt("TARGET_SDK_VERSION")
    buildToolsVersion getPropString("BUILD_TOOLS_VERSION")
    defaultConfig {
        applicationId "com.yaozu.mvp"
        minSdkVersion getPropInt("MIN_SDK_VERSION")
        targetSdkVersion getPropInt("TARGET_SDK_VERSION")
        versionCode getPropInt("VERSION_CODE")
        versionName getProperty("VERSION_NAME")

        ndk {
            //选择要添加的对应cpu类型的.so库。如果有对应的so文件则依次添加
            //'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86'
        }

        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "2g"
        preDexLibraries = false
    }

    signingConfigs {
        release {
            storeFile file("keystore.jks")
            storePassword "签名文件储存密码"
            keyAlias "别名"
            keyPassword "签名文件密码"
        }
        debug {

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//设置签名信息
            applicationVariants.all {
                variant ->
                    variant.outputs.each { output ->
                        if (output.outputFile != null && output.outputFile.name.endsWith('.apk')
                                && 'release'.equals(variant.buildType.name)) {
                            def apkFile = new File(
                                    output.outputFile.getParent(),
                                    "android_${getProperty("RELEASE_APP_NAME")}_${variant.versionName}_${buildTime()}.apk")
                            output.outputFile = apkFile
                        }
                    }
            }
        }

        debug {

        }
    }
//    sourceSets { // 指定jni路径
//        main {
//            jniLibs.srcDirs = ['libs']
//        }
//    }
//
//    compileOptions { // 指定jdk版本
//        sourceCompatibility JavaVersion.VERSION_1_7
//        targetCompatibility JavaVersion.VERSION_1_7
//    }
    packagingOptions { //过滤包中冲突的文件
//        exclude 'META-INF/DEPENDENCIES.txt'

    }

//    configurations.all {//统一依赖
//        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//            def requested = details.requested
//            if (requested.group == 'com.android.support') {
//                if (!requested.name.startsWith("multidex")) {
//                    //这里指定需要统一的依赖版本
//                    details.useVersion getPropString("SUPPORT_VERSION")
//                }
//            }
//        }
//    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    // android support
    compile 'com.android.support:support-v4:'+getPropString("SUPPORT_VERSION")
    compile 'com.android.support:appcompat-v7:'+getPropString("SUPPORT_VERSION")
    compile 'com.android.support:design:'+getPropString("SUPPORT_VERSION")
    compile 'com.android.support:recyclerview-v7:'+getPropString("SUPPORT_VERSION")
    compile 'com.android.support:cardview-v7:'+getPropString("SUPPORT_VERSION")
    compile 'com.android.support.constraint:constraint-layout:'+getPropString("SUPPORT_CONSTRAINT_LAYOUT")
    compile 'com.android.support:multidex:'+getPropString("SUPPORT_MULTIDEX")

    // 第三方库
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.5'
    compile 'com.jakewharton:disklrucache:2.0.2'
    //glide
    compile 'com.github.bumptech.glide:glide:3.7.0'
//    compile 'com.github.bumptech.glide:glide:4.4.0'
//    compile 'com.github.bumptech.glide:compiler:4.4.0'
    // 运行时权限检测
    compile("com.github.hotchemi:permissionsdispatcher:3.0.1") {
        // if you don't use android.app.Fragment you can exclude support for them
        exclude module: "support-v13"
    }
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:3.0.1"

    //cockroach 降低crash概略
    compile 'com.wanjian:cockroach:0.0.5'

    // dependency module
    compile project(':baselibrary')
    compile project(':customlibrary')
}
